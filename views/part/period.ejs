<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
    <body>
      <script>
        //시작시간/종료시간에 해당하는  차량들의 수를 나타내주는 함수
        function showCarData(){
            const config = {
                    method: "post",
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify({

                        startDate: $("#selectStartDate").val(),
                          endDate: $("#selectEndDate").val()})
                };
                fetch('/mainPage/tableDatetimeSelect2', config)
                .then(res => res.json())

                    .then(data => {
                    
                        const _car = document.querySelector('#car1'); 
                        const _bicycle = document.querySelector('#bicycle1'); 
                        const _motorcycle = document.querySelector('#motorcycle1');
                        const _truck = document.querySelector('#truck1');
                    // $('#car').text( "승용차"+":".padEnd(8-(data[0]["sum(n_car)"]).toString().length)+"8대");
                        
                        _car.innerText =data[0]["sum(n_car)"]+"대"
                        _bicycle.innerHTML =data[0]["sum(n_bicycle)"]+"대"
                        _motorcycle.innerText =data[0]["sum(n_motorcycle)"]+"대"
                        _truck.innerText =data[0]["sum(n_truck)"]+"대"           

                })
                .catch(error => console.log(error))
        }
        function CreateImg() {
        }
        //시작시간/종료시간에 해당하는  차트를 나타내주는 함수
        function showDataTable() {

          const config = {
              method: "post",
              headers: {'Content-Type': 'application/json'},
              body: JSON.stringify({
                  startDate: $("#selectStartDate").val(),
                  endDate: $("#selectEndDate").val()})
          };
          fetch('/mainPage/tableDatetimeSelect', config)
            .then(res => res.json())
            .then(json => {
                if(json.errno==1525)
                {
                    alert("날짜를 다시 입력해주세요.");
                }
              $(function () {
              $(document).ready(function() {
                  Highcharts.setOptions({
                      global: {
                          useUTC: false
                      }
                  });
              });
              var chart;
              //시작시간 받아오는 함수
              var getDay = function() {
                  var data = [];
                         for (i=0; i < json.length; i++) {
                              data.push(
                                  json[i].date_time
                              );
                          }
                          console.log(data);
                          return data;
              };
              //차트 각종 설정
              $('#container0').highcharts({
                  chart: {
                      type: 'spline'

                  },
                  title: {
                      text: 'DATA GRAPH',
                      x: -20
                  },
                  xAxis: {
                      type: 'datetime',
                      categories:getDay(),
                  },
                  yAxis: [{
                      title: {
                          text: 'People'
                      },
                      plotLines: [{
                          value: 0,
                          width: 1,
                          color: '#808080'
                      }]
                  },
                  {
                      title: {
                          text: 'Vehicle'
                      },
                      plotLines: [{
                          value: 0,
                          width: 1,
                          color: '#808080'
                      }]
                  }],
                  tooltip: {
                      formatter: function() {
                              return '<b>'+ this.series.name +'</b><br/>'+
                              Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) +'<br/>'+
                              Highcharts.numberFormat(this.y, 2);
                      }
                  },
                  legend: {
                      enabled: false
                  },
                  exporting: {
                      enabled: false
                  },
                  series: [{
                      name: 'People data',
                      data: (function() {
                          // generate an array of random data
                          var data =[];
                          for (i=0; i < json.length; i++) {
                              data.push(
                                 json[i].n_person
                             );
                          }
                          console.log(data);
                          return data;
                      })()
                   },
                   {
                      name: 'Vehicle data',
                      data: (function() {
                          // generate an array of random data
                          var data = [];
                         for (i=0; i < json.length; i++) {
                              data.push(
                                (json[i].n_car+json[i].n_truck+json[i].n_bus+json[i].n_bicycle+json[i].n_motorcycle+json[i].n_electric_scooter)
                              );
                          }
                          return data;
                      })()
                  }]
              });

              $('#container1').highcharts({
                  chart: {
                      type: 'column'

                  },
                  title: {
                      text: 'DATA GRAPH',
                      x: -20
                  },
                  xAxis: {
                      type: 'datetime',
                      categories:getDay(),
                  },
                  yAxis: [{
                      title: {
                          text: 'People'
                      },
                      plotLines: [{
                          value: 0,
                          width: 1,
                          color: '#808080'
                      }]
                  },
                  {
                      title: {
                          text: 'Vehicle'
                      },
                      plotLines: [{
                          value: 0,
                          width: 1,
                          color: '#808080'
                      }]
                  }],
                  tooltip: {
                      formatter: function() {
                              return '<b>'+ this.series.name +'</b><br/>'+
                              Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) +'<br/>'+
                              Highcharts.numberFormat(this.y, 2);
                      }
                  },
                  legend: {
                      enabled: false
                  },
                  exporting: {
                      enabled: false
                  },
                  series: [{
                      name: 'People data',
                      data: (function() {
                          // generate an array of random data
                          var data =[];
                          for (i=0; i < json.length; i++) {
                              data.push(
                                 json[i].n_person
                             );
                          }
                          console.log(data);
                          return data;
                      })()
                   },
                   {
                      name: 'Vehicle data',
                      data: (function() {
                          // generate an array of random data
                          var data = [];
                         for (i=0; i < json.length; i++) {
                              data.push(
                                (json[i].n_car+json[i].n_truck+json[i].n_bus+json[i].n_bicycle+json[i].n_motorcycle+json[i].n_electric_scooter)
                              );
                          }
                          return data;
                      })()
                  }]
              });
              


              })
            })
            .catch(error => console.log(error))
          }
          //시작시간/종료시간에 해당하는  차량 속도를 나타내주는 함수 --> 나중에
          function showCarSpeed(){
            // $('#showCarSpeed').text('속도 데이터 들어오면 넣을거야');
            // $('#eachspeed').text('이거슬도 속도데이터 들어오면 넣을래~~');
            // $('#carStayandRoot').text('정차,주차 유무,경로는 얘기해봐야할 거 같앙~.~');
            

          }
          
       
          //시작시간/종료시간에 해당하는  시림들의 수를 나타내주는 함수 
          function showPerson(){
            const config = {
                    method: "post",
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify({
                        startDate: $("#selectStartDate").val(),
                        endDate: $("#selectEndDate").val()})
                };
                fetch('/mainPage/showPerson', config)

                .then(res => res.json())

                .then(data => {
                 

                $('#personpeople1').text("사람: "+data[0]['sum(n_person)']+"명");                   
                })

                .catch(error => console.log(error))

          }
          function showchart(){  
             $('#container5').empty();
              const config = {
              method: "post",
              headers: {'Content-Type': 'application/json'},
              body: JSON.stringify({
                  startDate: $("#selectStartDate").val(),
                  endDate: $("#selectEndDate").val()})
                 };
          fetch('/mainPage/cardata', config)
            .then(res => res.json())
            .then(data => {
             
              console.log(data);
            // generate an array of random data
            var data1 = [];
            
           
                data1.push(
                    ['car',data[0]['sum(n_car)']],
                    ['bicycle',data[0]['sum(n_bicycle)']],
                    ['motorcycle',data[0]['sum(n_motorcycle)']],
                    ['truck',data[0]['sum(n_truck)']]
                );
                
           var totaldata=data[0]['sum(n_car)']+data[0]['sum(n_bicycle)']+data[0]['sum(n_motorcycle)']+data[0]['sum(n_truck)'];
           console.log(data1);
            anychart.onDocumentReady(function () {
            var data = anychart.data.set(data1);
            var chart = anychart.pie(data);

            // set the chart radius making a donut chart
            chart.innerRadius('55%')
            // create a color palette
            var palette = anychart.palettes.distinctColors();
            
            // set the colors according to the brands
            palette.items([
                { color: '#1dd05d' },
                { color: '#00a3da' },
                { color: '#156ef2' },
                { color: '#f60000' },
                // { color: '#96a6a6' }
            ]);
            
            // apply the donut chart color palette
            chart.palette(palette);
            
            // set the position of labels
            chart.labels().format('{%x} : {%y}대').fontSize(13);
            chart.labels().fontColor('#000000');
            // disable the legend
            chart.legend(false);
            
            // format the donut chart tooltip
            chart.tooltip().format('{%x}: {%PercentValue}%');
            // create a standalone label
            var label = anychart.standalones.label();
            // configure the label settings
            label
                .useHtml(true)
                // .text(
                // // '<span style = "color: #313136; font-size:10px;">150</span>' 
                
                // // '<br/><br/></br><span style="color:#444857; font-size: 14px;"><i>Spotify and Apple Music have more <br/>than 50% of the total market share</i></span>'
                // )
                .text(totaldata)
                .position('center')
                .anchor('center')
                .hAlign('center')
                .vAlign('middle')
                
            // set the label as the center content
           
            chart.center().content(label);
            
            // set container id for the chart
            chart.container('container5');
            
            // initiate chart drawing
            chart.draw();
            // const _totaldata = document.querySelector('#overlay');
            // _totaldata.innerText =totaldata
        })
         })
            .catch(error => console.log(error))
        
        }
          $(function() {
            $(document).on("click", "#dateSelectBtn", function(){
                showDataTable() ;
                showCarData();
                showCarSpeed();
                CreateImg();
                showPerson();
                showchart();
            });
          });



        // "기간 조회" 버튼 클릭 시 date form 2개 생성
        //   function termInput(){
        //     $('#showCarSpeed').empty();
        //     $('#eachspeed').empty();
        //     $('#carStayandRoot').empty();
        //     $('#showTotalCar').empty();
        //     $('#personpeople').empty();
        //     $("#container").empty();
        //     $("#container1").empty();
        //     $("#addForm").empty();
        //     $('#showLatestTable').empty();
        //     $('#addForm').append("<input id='selectStartDate' type='date'> ~ ");
        //     $('#addForm').append("<input id='selectEndDate' type='date'> ");
        //     $('#addForm').append("<button type='button' id='dateSelectBtn'> Submit </button>");
        //   }

      </script>
    </body>
</html>
